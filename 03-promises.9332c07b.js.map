{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,MAAM,GAAGF,MACzBG,KAAMF,SAASC,MAAM,GAAGC,KACxBC,OAAQH,SAASC,MAAM,GAAGE,OAC1BC,OAAQJ,SAASK,cAAc,wBAgCjC,SAASC,EAAcC,EAAUR,GAC/B,OAAO,IAAIS,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUR,UAEpBW,EAAO,CAAEH,WAAUR,S,GAEpBA,E,IArCPD,EAAKM,OAAOW,iBAAiB,SAE7B,SAAsBC,GACpBA,EAAMC,iBAON,IALA,IAAMC,EAAW,GACbC,EAAQrB,EAAKC,MAAMqB,MACjBlB,EAAOJ,EAAKI,KAAKkB,MACjBjB,EAASL,EAAKK,OAAOiB,MAElBC,EAAI,EAAGA,EAAIlB,EAAQkB,GAAK,EAAG,CAClC,IAAIC,EAAWD,EAAI,EACnBF,GAASA,EAAQE,EAAInB,EACrBgB,EAASK,KACPjB,EAAcgB,EAAUH,GACrBK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUR,EAAK0B,EAAL1B,MACjBH,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAAN7B,EAAM,M,IAG9D8B,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUR,EAAK0B,EAAL1B,MAClBH,EAAA8B,OAAOI,QAAQ,sBAAuCF,OAAfrB,EAAS,QAAYqB,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delay: document.forms[0].delay,\n  step: document.forms[0].step,\n  amount: document.forms[0].amount,\n  submit: document.querySelector('button[type=submit]'),\n};\n\n// console.log(refs);\n\nrefs.submit.addEventListener('click', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const promises = [];\n  let delay = refs.delay.value;\n  const step = refs.step.value;\n  const amount = refs.amount.value;\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    delay = +delay + i * step;\n    promises.push(\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        })\n    );\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","forms","step","amount","submit","querySelector","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","promises","delay1","value","i","position1","push","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9332c07b.js.map"}